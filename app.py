# -*- coding: utf-8 -*-
"""Klasifikasi Gunting Kertas Batu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dRFvSDJ_b0fvOHF2FjfCUmIkyIySR6ud
"""

import tensorflow as tf
import matplotlib.pyplot as plt

from tensorflow import keras
from keras.models import Sequential
from keras.layers import Conv2D, Dense, Flatten, Dropout, MaxPooling2D
from keras.optimizers import SGD, Adam
from keras.preprocessing.image import ImageDataGenerator

import zipfile, os

# local_zip = 'E:/projects/comvistugas/tmp/rockpaperscissors.zip'
# zip_ref = zipfile.ZipFile(local_zip, 'r')
# zip_ref.extractall('E:/projects/comvistugas/tmp/')
# zip_ref.close()

ROOT_PATH = "E:/projects/comvistugas2/tmp/dataset"
CLASS_MODE = 'categorical'
COLOR_MODE = 'grayscale'

BATCH_SIZE = 10
TARGET_SIZE = (32, 32)

EPOCH = 10

dataset_generator = ImageDataGenerator(
    rescale=1. / 255,
    rotation_range=0.2,
    validation_split=0.2,
    zoom_range=0.2
)

validation_generator = ImageDataGenerator(
    rescale=1. / 255,
    validation_split=0.2
)

train_set = dataset_generator.flow_from_directory(
    ROOT_PATH,
    target_size=TARGET_SIZE,
    batch_size=BATCH_SIZE,
    color_mode=COLOR_MODE,
    class_mode=CLASS_MODE,
    subset='training'
)
#
# validation_set = validation_generator.flow_from_directory(
#     ROOT_PATH,
#     target_size=TARGET_SIZE,
#     batch_size=BATCH_SIZE,
#     color_mode=COLOR_MODE,
#     class_mode=CLASS_MODE,
#     subset='validation',
#     shuffle=False
# )
#
# train_set.class_indices
#
# model = Sequential([
#     Conv2D(64, (2, 2), input_shape=(TARGET_SIZE[0], TARGET_SIZE[1], 1), activation='relu'),
#     Flatten(),
#     Dense(2, activation='softmax')
# ])
# optimizer = Adam(learning_rate=0.001)
# model.compile(optimizer=optimizer, loss='categorical_crossentropy', metrics=['accuracy'])
# model.summary()
#
# model.fit(
#     train_set,
#     epochs=EPOCH,
#     validation_data=validation_set
# )

# model.save("comvismodel.h5")

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import cv2
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

img = image.load_img("E:/projects/comvistugas2/maksssksksss37.png", target_size=TARGET_SIZE, color_mode="grayscale")
imgplot = plt.imshow(img)
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)

model = keras.models.load_model("comvismodel.h5")

images = np.vstack([x])
classes = model.predict(images)
predicted_index = np.argmax(classes)

print(classes)
print(predicted_index)

if classes[0][predicted_index] > .5:
    if predicted_index == train_set.class_indices["masker"]:
        print('Masker')
    elif predicted_index == train_set.class_indices["nomasker"]:
        print('Tidak Pakai Masker')
    else:
        print("Index out of range")
else:
    print("Tidak yakin dengan gambar apa yang dikirim")
